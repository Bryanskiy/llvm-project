#ifndef LLVM_LIB_TARGET_sim_INSTPRINTER_simINSTPRINTER_H
#define LLVM_LIB_TARGET_sim_INSTPRINTER_simINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

class simInstPrinter : public MCInstPrinter {
public:
  simInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                  const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  // Autogenerated by tblgen.
  std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
  void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
  static const char *getRegisterName(unsigned RegNo);
  static const char *getRegisterName(unsigned RegNo, unsigned AltIdx);

  void printRegName(raw_ostream &OS, unsigned RegNo) const override;
  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;

  void printOperand(const MCInst *MI, int OpNo, raw_ostream &OS);
  void printBranchOperand(const MCInst *MI, uint64_t Address, unsigned OpNo,
                          raw_ostream &O);
};
} // end namespace llvm

// Defines symbolic names for sim registers.
#define GET_REGINFO_ENUM
#include "simGenRegisterInfo.inc"

// Defines symbolic names for sim instructions.
#define GET_INSTRINFO_ENUM
#define GET_INSTRINFO_MC_HELPER_DECLS
#include "simGenInstrInfo.inc"


#endif // LLVM_LIB_TARGET_sim_INSTPRINTER_simINSTPRINTER_H
